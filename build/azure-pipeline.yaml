trigger:
- master

variables:
  BuildConfiguration: 'Release'
  AzureConnection: 'Azure MSDN Perso'

stages:
- stage: Build_Test
  jobs:
  - job: run_build
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    # restore nuget packages
    - task: DotNetCoreCLI@2
      displayName : 'Restore Nuget packages'
      inputs:
        command: restore
        projects: '**/*/*.csproj'

    # build project
    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        command: build
        projects: '**/src/*/*.csproj'
        arguments: '--configuration $(BuildConfiguration)' # Update this to match your need

    # execute unit tests
    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests'
      inputs:
        command: test
        projects: '**/*tests/*/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --collect "Code coverage"'

    # create a zip archive ready to deploy
    - task: DotNetCoreCLI@2
      displayName: 'Create Zip'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

    - task: PublishBuildArtifacts@1
      displayName: Publish Artifacts
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'coreapidemo'

- stage: Staging
  dependsOn: Build_Test
  jobs:
  - job: deploy_staging
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        displayName: 'Download Artifact'
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'coreapidemo'
        downloadPath: '$(System.ArtifactsDirectory)' 

    - task: AzureWebApp@1
      inputs:
        displayName: 'Deploy to AzureWebApp '
        azureSubscription: $(AzureConnection)
        appName: coreapidemo
        package: $(System.ArtifactsDirectory)/**/*.zip

- stage: Prod
  dependsOn: Staging
  jobs:
  - job: deploy_prod
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: DownloadBuildArtifacts@0
      inputs:
        displayName: 'Download Artifact'
        buildType: 'current'
        downloadType: 'single'
        artifactName: 'coreapidemo'
        downloadPath: '$(System.ArtifactsDirectory)' 

    - task: AzureWebApp@1
      inputs:
        displayName: 'Deploy to AzureWebApp '
        azureSubscription: $(AzureConnection)
        appName: coreapidemo-prod
        package: $(System.ArtifactsDirectory)/**/*.zip