trigger:
- master

variables:
  BuildConfiguration: 'Release'
  AzureConnection: 'Azure MSDN Perso'

stages:
- stage: Build & Test
  jobs:
  - job: run_build
    pool:
      vmImage: 'vs2017-win2016'
    steps:
    - task: DotNetCoreInstaller@0
      displayName: 'Install .net core 3.0 (preview)'
      inputs:
        version: '3.0.100-preview9-014004'

    # restore nuget packages
    - task: DotNetCoreCLI@2
      displayName : 'Restore Nuget packages'
      inputs:
        command: restore
        projects: '**/*/*.csproj'

    # build project
    - task: DotNetCoreCLI@2
      displayName: 'Build project'
      inputs:
        command: build
        projects: '**/src/*/*.csproj'
        arguments: '--configuration $(BuildConfiguration)' # Update this to match your need

    # execute unit tests
    - task: DotNetCoreCLI@2
      displayName: 'Run Unit Tests'
      inputs:
        command: test
        projects: '**/*tests/*/*.csproj'
        arguments: '--configuration $(BuildConfiguration) --collect "Code coverage"'

    # create a zip archive ready to deploy
    - task: DotNetCoreCLI@2
      displayName: 'Create Zip'
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True

- stage: Staging
  dependsOn: build
  jobs:
  - job: deploy_staging
    pool:
      vmImage: 'vs2017-win2016'
    # environment: Staging
    steps:
    - task: AzureWebApp@1
      inputs:
        azureSubscription: $(AzureConnection)
        appName: coreapidemo
        package: $(System.ArtifactsDirectory)/**/*.zip

- stage: Prod
  dependsOn: staging
  jobs:
  - job: deploy_prod
    pool:
      vmImage: 'vs2017-win2016'
    # environment: Prod
    steps:
    - script: echo Prod